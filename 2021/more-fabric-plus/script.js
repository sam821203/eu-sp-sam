const canvas = new fabric.Canvas("canvas", { width: 500, height: 500, backgroundColor: "#fff" }), $ = e => document.getElementById(e), foregroundSwitch = $("foregroundSwitch"), uploadImg = $("uploadImg"); let movingImage, fileName; function stopChain(e) { return e.preventDefault(), e.stopPropagation(), !1 } function uploadFile(e) { e.preventDefault(), e.stopPropagation(); const a = e.dataTransfer.files, t = new FileReader; t.readAsDataURL(a[0]), fileName = a[0].name, t.onload = (e => { const a = e.target.result, t = document.createElement("img"); t.src = a, movingImage = t, setTimeout(function () { dropImg(e) }, 0) }) } function dropImg(e) { const a = $("btnReadyToSave"), t = new fabric.Image(movingImage, { width: movingImage.naturalWidth, height: movingImage.naturalHeight, scaleX: 300 / movingImage.naturalWidth, scaleY: 300 / movingImage.naturalHeight, top: 100, left: 100 }); canvas.add(t), a.hidden = "", a.onclick = function () { loadForegroundImg(), setTimeout(saveImg, 500) }, uploadImg.style.display = "none" } function opacitySwitch() { const e = document.getElementById("foreground"); !0 === foregroundSwitch.checked ? e.style.opacity = .5 : e.style.opacity = 1 } function loadForegroundImg() { fabric.Image.fromURL("foreground.png", function (e) { e.scaleToHeight(500), e.scaleToWidth(500), e.set({ hoverCursor: "default", selectable: !1 }), canvas.add(e), canvas.discardActiveObject(), canvas.sendToBack(canvas.item(0)), canvas.bringToFront(e) }) } function saveImg() { const e = $("btnSaveImg"); (new Date).getTime(); e.href = canvas.toDataURL("image/jpeg"), e.download = fileName + "_masked.jpg", e.click(), location.reload() } uploadImg.addEventListener("dragenter", stopChain, !1), uploadImg.addEventListener("dragover", stopChain, !1), uploadImg.addEventListener("drop", uploadFile, !1), foregroundSwitch.addEventListener("change", opacitySwitch);