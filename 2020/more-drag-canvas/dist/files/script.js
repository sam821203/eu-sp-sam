fabric.Object.prototype.customiseCornerIcons({ settings: { borderColor: "black", cornerSize: 18, cornerShape: "circle", cornerBackgroundColor: "blue", cornerPadding: 10 } }, function () { canvas.renderAll() }), fabric.Canvas.prototype.customiseControls({ tr: { action: function (e, t) { const a = $("textWrap"); this._activeObject.hasOwnProperty("text") && this._removeAction(e, t), a.style.visibility = "visible" }, cursor: "pointer" } }, function () { canvas.renderAll() }); const canvas = new fabric.Canvas("canvas", { width: 500, height: 500, backgroundColor: "transparent" }), $ = e => document.getElementById(e), foregroundSwitch = $("foregroundSwitch"), canvasWrap = $("canvasWrap"), textColor = $("textColor"); let movingImage, fileName; function stopChain(e) { return e.preventDefault(), e.stopPropagation(), !1 } function uploadFile(e) { e.preventDefault(), e.stopPropagation(); const t = e.dataTransfer.files, a = new FileReader; a.readAsDataURL(t[0]), fileName = t[0].name.split(/\.(png|svg|jpe?g|gif)$/)[0], a.onload = (e => { const t = e.target.result, a = document.createElement("img"); a.src = t, movingImage = a, setTimeout(function () { dropImg(e) }, 0) }) } function dropImg(e) { const t = $("canvasWrap"), a = $("textWrap"), n = $("btnReadyToSave"), o = document.querySelector("#foreground span"), i = new fabric.Image(movingImage, { width: movingImage.naturalWidth, height: movingImage.naturalHeight, scaleX: 300 / movingImage.naturalWidth, scaleY: 300 / movingImage.naturalWidth, top: 100, left: 100 }); canvas.discardActiveObject(), canvas.add(i), t.removeEventListener("drop", uploadFile, !1), o.remove(), a.style.visibility = "visible", n.hidden = "", n.onclick = function () { loadForegroundImg(), setTimeout(saveImg, 500) } } function opacitySwitch() { const e = $("canvasWrap"), t = $("foreground"); !0 === foregroundSwitch.checked ? (e.classList.add("active"), t.classList.add("active")) : (e.classList.remove("active"), t.classList.remove("active")) } function loadForegroundImg() { fabric.Image.fromURL("foreground.png", function (e) { e.scaleToHeight(500), e.scaleToWidth(500), e.set({ hoverCursor: "default", selectable: !1 }), canvas.add(e), canvas.discardActiveObject(), canvas.sendToBack(canvas.item(0)), canvas.bringToFront(canvas.item(1)) }) } function saveImg() { const e = $("btnSaveImg"), t = document.querySelector(".options__wrap .alert__wrap"); e.href = canvas.toDataURL("image/jpeg"), e.download = fileName + "_masked.jpg", e.click(), t.classList.add("active"), setTimeout(function () { location.reload() }, 2e3) } function addText(e, t) { const a = $("textWrap"), n = $("textColor").value, o = new fabric.IText(e, { top: 250, left: 250, fill: n || "#000", fontSize: 40, fontFamily: "Microsoft JhengHei, PMingLiU, sans-serif" }); o.customiseCornerIcons({ tr: { icon: "./files/cancel.svg" } }, function () { canvas.renderAll() }), canvas.discardActiveObject(), canvas.add(o), a.style.visibility = "hidden" } canvasWrap.addEventListener("dragenter", stopChain, !1), canvasWrap.addEventListener("dragover", stopChain, !1), canvasWrap.addEventListener("drop", uploadFile, !1), foregroundSwitch.addEventListener("change", opacitySwitch), textColor.addEventListener("keyup", function () { this.style.backgroundColor = this.value }, !1), textSubmit.addEventListener("click", function () { const e = $("canvasWrap"), t = $("foreground"), a = $("foregroundSwitch"); let n = $("foregroundText").value; e.classList.add("active"), t.classList.add("active"), a.checked = "checked", addText(n) }, !1);